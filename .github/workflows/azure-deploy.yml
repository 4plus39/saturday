name: Deploy Django to Azure with Docker

on:
  push:
    branches:
      - "main"  # 每當推送到 main 分支時啟動
  workflow_dispatch:  # 允許手動觸發工作流程

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest  # 在 Ubuntu 最新版本中執行

    steps:
      # 步驟 1：檢出代碼
      - uses: actions/checkout@v4
        name: Checkout code

      # 步驟 2：設置 Docker
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # 步驟 3：構建 Docker 映像
      - name: Build Docker image
        run: |
          docker build -t my-django-app .

      # 步驟 4：推送 Docker 映像到 Azure Container Registry
      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.AZURE_ACR_LOGIN_SERVER }}
          username: ${{ secrets.AZURE_ACR_USERNAME }}
          password: ${{ secrets.AZURE_ACR_PASSWORD }}
          
      - name: Push Docker image
        run: |
          docker tag my-django-app:latest ${{ secrets.AZURE_ACR_LOGIN_SERVER }}/my-django-app:latest
          docker push ${{ secrets.AZURE_ACR_LOGIN_SERVER }}/my-django-app:latest

      # 步驟 5：部署 Docker 映像到 Azure Web App
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'my-django-app-123'
          slot-name: 'production'
          images: ${{ secrets.AZURE_ACR_LOGIN_SERVER }}/my-django-app:latest

      # 步驟 6：登入 Azure 並設置應用設定（可選）
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set Azure App Settings
        run: |
          az webapp config appsettings set \
            --name my-django-app-123 \
            --resource-group my-django-app \
            --settings \
              CWA_API_KEY=${{ secrets.CWA_API_KEY }} \
              OTHER_SETTING=value
